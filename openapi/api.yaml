openapi: "3.0.0"
info:
  title: "Payments API"
  description: "API to create withdrawals and deposits on the payments service"
  version: "1.0.0"
paths:
  /payments/{paymentId}:
    get:
      description: "Gets an individual payment"
      operationId: "getPayment"
      parameters:
        - name: "paymentId"
          in: "path"
          description: "Payment Id"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Payment found"
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/components/schemas/payment"
        "404":
          description: "Payment not found"
        "500":
          description: "Internal error"
    patch:
      summary: "Patches an outbound payment"
      operationId: "patchPayment"
      parameters:
        - name: "X-Walletera-Correlation-Id"
          in: "header"
          description: "a UUID that allows to trace end-to-end transactions"
          required: false
          schema:
            type: string
            format: "uuid"
        - name: "paymentId"
          in: "path"
          description: "Payment Id"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "schemas.yaml#/components/schemas/paymentUpdate"
      responses:
        "200":
          description: "Payment successfully updated"
        "400":
          description: "The provided parameters are incorrect"
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/components/schemas/errorMessage"
        "500":
          description: "Internal error"

  /payments:
    post:
      summary: "Creates a payment"
      operationId: "postPayment"
      parameters:
        - name: "X-Walletera-Correlation-Id"
          in: "header"
          description: "a UUID that allows to trace end-to-end transactions"
          required: false
          schema:
            type: string
            format: "uuid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "schemas.yaml#/components/schemas/payment"
      responses:
        "201":
          description: "Payment successfully created"
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/components/schemas/payment"
        "400":
          description: "The provided parameters are incorrect"
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/components/schemas/errorMessage"
        "409":
          description: "The payment already exist"
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/components/schemas/errorMessage"
        "500":
          description: "Internal error"
